import Head from 'next/head'
import Layout from '../../components/Layout'
import { useState, useEffect, useRef } from 'react'
import Loader from '../../components/Loader'
import Breadcrumb from '../../components/Breadcrumb'
import Modal from '../../components/Modal'
import { toast } from 'react-toastify';
import { useRouter } from 'next/router'
import constant from '../../constant'
import useSWR from 'swr'
import OrderItem from '../../components/Order'


export default function Order() {

    const router = useRouter()
    const { id } = router.query

    const cartSection = useRef(null);
    const modalCloseBtn = useRef(null);

    const [showLoader, setShowLoader] = useState(true)
    const [order, setOrder] = useState([])


    const fetcher = (...args) => fetch(...args, {
        headers: {
            'authorization': 'bearer ' + "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOlwvXC8zNS4xNTQuMjA5LjE4XC9hcGlcL2F1dGhcL2xvZ2luIiwiaWF0IjoxNjQzMzkwMjkxLCJleHAiOjE2NDQwNzY2OTEsIm5iZiI6MTY0MzM5MDI5MSwianRpIjoiUm9VUWpNaFVubWVSdnl1MyIsInN1YiI6NywicHJ2IjoiMjNiZDVjODk0OWY2MDBhZGIzOWU3MDFjNDAwODcyZGI3YTU5NzZmNyJ9.qzskxa9GVdwCgLuzaOKHHhGh-vO83hyZwhwbKZ21fxk",
        },
    }).then((res) => res.json())

    const { data, error } = useSWR(`${constant.api_route}/order/${id}`, fetcher)

    useEffect(() => {
        if (error) {
            toast.error('Something went wrong. Please refresh the page', {
                position: "top-right",
                autoClose: 5000,
                hideProgressBar: false,
                closeOnClick: true,
                pauseOnHover: true,
                toastId: new Date()
            });
        }

        return () => { };
    }, [error]);

    useEffect(() => {
        if (!data) {
            setShowLoader(true)
        } else {
            setShowLoader(false)
            setOrder(data?.data?.sub_orders)
            // console.log(data);
        }

        return () => { };
    }, [data]);

    return (
        <Layout cartSection={cartSection}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {showLoader ? <Loader /> : null}
            <Breadcrumb link={`Orders / ${id}`} />
            <section className="middle" id="prduct">
                <div className="container">

                    <div className="">
                        <div className="rightMenu-scroll">
                            <div className="d-flex align-items-center justify-content-between slide-head py-3 px-3">
                                <h4 className="cart_heading fs-md ft-medium mb-0">Order Item List </h4>
                            </div>
                            <div className="right-ch-sideBar">

                                <div className="cart_select_items py-2">

                                    {order?.map((item)=>{
                                        return <OrderItem key={item.id} item={item} />
                                    })}

                                </div>

                                <div className="d-flex align-items-center justify-content-between br-top br-bottom px-3 py-3">
                                    <h6 className="mb-0">Subtotal</h6>
                                    <h3 className="mb-0 ft-medium">Rs. {order?.length>0 ? order[0]?.sub_total : 0}</h3>
                                </div>

                            </div>
                        </div>
                    </div>

                </div>
            </section>
        </Layout>
    )


}